apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: release-monitoring
message: integreatly release-monitoring
parameters:
  - name: POSTGRE_USERNAME
    generate: expression
    from: "user[A-Z0-9]{3}"
  - name: POSTGRE_PASSWORD
    generate: expression
    from: "[a-zA-Z0-9]{16}"
  - name: POSTGRE_DB
    value: anitya
  - name: POSTGRE_IMAGE
    value: centos/postgresql-95-centos7
  - name: POSTGRE_PVC_SIZE
    value: 1Gi
objects:
  #postgres
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: postgresql-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${POSTGRE_PVC_SIZE}
  - apiVersion: v1
    kind: Secret
    metadata:
      name: postgresql
      labels:
        app: postgresql
    stringData:
      database-user: "${POSTGRE_USERNAME}"
      database-password: "${POSTGRE_PASSWORD}"
  - apiVersion: v1
    kind: Service
    metadata:
      name: postgresql
      creationTimestamp: null
      labels:
        app: postgresql
        template: release-monitoring
    spec:
      ports:
        - name: postgresql
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        name: postgresql
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: postgresql
      creationTimestamp: null
      labels:
        app: postgresql
        template: release-monitoring
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        name: postgresql
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: postgresql
        spec:
          volumes:
            - name: postgresql-data
              persistentVolumeClaim:
                claimName: postgresql-data
          containers:
            - name: postgresql
              image: ${POSTGRE_IMAGE}
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-password
                - name: POSTGRESQL_DATABASE
                  value: ${POSTGRE_DB}
              resources:
                limits:
                  memory: 512Mi
              volumeMounts:
                - name: postgresql-data
                  mountPath: /var/lib/pgsql/data
              livenessProbe:
                tcpSocket:
                  port: 5432
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - '-i'
                    - '-c'
                    - >-
                      psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                      $POSTGRESQL_DATABASE -c 'SELECT 1'
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: Always
              securityContext:
                capabilities: {}
                privileged: false
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
    status: {}
